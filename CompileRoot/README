This project offers a very simple, complete, general working method for compiling and executing root macros (i.e. cxx files with dependencies on root libraries). Root’s interactive method is not to my taste, although it is similar. To instead use the interactive root environment to compile and run a macro (referred to throughout as "root_macro.cxx"), the changes to the current setup are minimal:
     1) The build and execution command merge into “root root_macro.cxx+" rather than “runroot root_macro && ./root_macro”. To pass in the necessary arguments, I believe it is possible to do “root root_macro.cxx+(some args)”, although I haven’t tested this.
     2) In the macro itself, “int main()” -> “int root_macro()“.
     3) Obviously you will not use the submit script provided to run the macro, since it will be in an interactive session.

The example macro, macros/root_macro.cxx, takes some tree branches from a file and fills some histograms with them. However, in general, one can replace the function TreetoHist() with any function. E.g. (in pseudo-code):
“int unfold() {\\some code}
 int main() {open input file; unfold(); write to output file; return 0;}”

The nominal setup is for the macro to take a single input root file, and produce a single output root file. n jobs are spawned if there are n input files (one job per file). There will also be n output and log files. The output root files can then be ‘hadd’ed into one, e.g. “hadd -f all_files.root individual_file*.root”.

To use this code:
   1) the file “macros/runroot” needs to be included in the path, e.g. “export PATH=~/fundamentals/CompileRoot/macros/:{PATH}” in your config file (e.g. bashrc, cshrc, …)
   2) input files must be generated. This can be accomplished by running “runroot produce_file_for_tests && ./bin/produce_file_for_tests”. This will produce “file1” and “file2” which are used as inputs. Of course, you are free to make your own input file(s) via whatever means you prefer.
   3) if you don’t have access to the WSU RHIG nodes on the WSU HPC Grid (or to the Grid itself), the “qsub” line of the submit script will need to be changed. If not using the RHIG nodes, simply remove -q erhiq. If not using the Grid at all, you’ll need to change the line to whatever job scheduler syntax is required on your setup.
   4) to make some of the necessary directories, run "mkdir log out macros/bin macros/obj".
   
